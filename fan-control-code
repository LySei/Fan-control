#include <Wire.h>
#include <DS3231.h>

#include <LiquidCrystal.h>

LiquidCrystal lcd(7, 8, 9, 10, 11, 12);
int button = 2;
int button2 = 30;
int button3 = 23;
int i = 0;
int state;
int buttonPush = 0;
int buttonPushC = 0;
int buttonPushCW = 0;
DS3231 clock;
RTCDateTime dt;
//#define delay 30000
#define ENABLE 5
#define DIRA 3
#define DIRB 4


void setup() {

  Serial.begin(9600);

  Serial.println("Initialize RTC module");
  // Initialize DS3231
  clock.begin();

  
  clock.setDateTime(__DATE__, __TIME__);    

  lcd.begin(16, 2);
  pinMode(button, INPUT);
  //lcd.begin(16, 2);
  state = 1;

  //fan control
  pinMode(ENABLE,OUTPUT);
  pinMode(DIRA,OUTPUT);
  pinMode(DIRB,OUTPUT);
  Serial.begin(9600);
}

void loop() {
  
 dt = clock.getDateTime();
 
 lcd.begin(16, 2);
 lcd.setCursor(0, 0);
 lcd.print(dt.year);   lcd.print("-");
  lcd.print(dt.month);  lcd.print("-");
  lcd.print(dt.day);    lcd.print(" ");
  lcd.print(dt.hour);   lcd.print(":");
  lcd.print(dt.minute); lcd.print(":");
  lcd.print(dt.second); lcd.println("");

  delay(1000);


switch (state){
  case 1:
    i = 0;
    lcd.begin(16, 2);
    lcd.print("Fan Off");
    analogWrite(ENABLE,LOW); //off
    digitalWrite(DIRA,HIGH); //one way
    digitalWrite(DIRB,LOW);
    while (i == 0)
    {
      delay(500);
      buttonPush = digitalRead(button);
  if (buttonPush == 1)
  {
    i = 3;
   
    state = 2;
  }
} 

    
    break;
    
  case 2:
    i = 0;
    analogWrite(ENABLE,112); //half speed
    digitalWrite(DIRA,HIGH); //one way
    digitalWrite(DIRB,LOW);
    //lcd.begin(16, 2);
    lcd.begin(16, 2);
    lcd.print("Fan On- 1/2");
    lcd.setCursor(0, 1);
    lcd.print("CW");
    while (i == 0)
{
  delay(500);
  buttonPushCW = digitalRead(button3);
  buttonPushC = digitalRead(button2);
  buttonPush = digitalRead(button);
  if (buttonPushC == 1)
  {
      digitalWrite(DIRA,HIGH); //one way
      digitalWrite(DIRB,LOW);
    lcd.begin(16, 2);
    lcd.print("Fan On- 1/2");
    lcd.setCursor(0, 1);
    lcd.print("CW");
    }
  
  if (buttonPushCW == 1)
  {
      digitalWrite(DIRA,LOW); //one way
      digitalWrite(DIRB,HIGH);
    lcd.begin(16, 2);
    lcd.print("Fan On- 1/2");
    lcd.setCursor(0, 1);
    lcd.print("CCW");
  }
  if (buttonPush == 1)
  {
    i++;
    state = 3;
  }

}

    break;
    
  case 3: 
    i = 0;
    analogWrite(ENABLE,168); //half speed
    digitalWrite(DIRA,HIGH); //one way
    digitalWrite(DIRB,LOW);
    //lcd.begin(16, 2);
    lcd.begin(16, 2);
    lcd.print("Fan On- 3/4");
    lcd.setCursor(0, 1);
    lcd.print("CW");
    while (i == 0)
{
  delay(500);
  buttonPushCW = digitalRead(button3);
  buttonPushC = digitalRead(button2);
  buttonPush = digitalRead(button);
  if (buttonPushC == 1)
  {
      digitalWrite(DIRA,HIGH); //one way
      digitalWrite(DIRB,LOW);
    lcd.begin(16, 2);
    lcd.print("Fan On- 3/4");
    lcd.setCursor(0, 1);
    lcd.print("CW");
    }
  
  if (buttonPushCW == 1)
  {
      digitalWrite(DIRA,LOW); //one way
      digitalWrite(DIRB,HIGH);
    lcd.begin(16, 2);
    lcd.print("Fan On- 3/4");
    lcd.setCursor(0, 1);
    lcd.print("CCW");
    }
  
  if (buttonPush == 1)
  {
    i++;
    state = 4;
  }

}

    
  case 4: 
    i = 0;
    analogWrite(ENABLE,225); //half speed
    digitalWrite(DIRA,HIGH); //one way
    digitalWrite(DIRB,LOW);
    //lcd.begin(16, 2);
    lcd.begin(16, 2);
    lcd.print("Fan On- FULL");
    lcd.setCursor(0, 1);
    lcd.print("CW");
    while (i == 0)
{
  delay(500);
  buttonPushCW = digitalRead(button3);
  buttonPushC = digitalRead(button2);
  buttonPush = digitalRead(button);
  if (buttonPushC == 1)
  {
      digitalWrite(DIRA,HIGH); //one way
      digitalWrite(DIRB,LOW);
    lcd.begin(16, 2);
    lcd.print("Fan On- FULL");
    lcd.setCursor(0, 1);
    lcd.print("CW");
    }
  
  if (buttonPushCW == 1)
  {
      digitalWrite(DIRA,LOW); //one way
      digitalWrite(DIRB,HIGH);
    lcd.begin(16, 2);
    lcd.print("Fan On- FULL");
    lcd.setCursor(0, 1);
    lcd.print("CCW");
  }
  if (buttonPush == 1)
  {
    i++;
    state = 1;
  }

}

    break;
  
  case 5:
    lcd.print("Case 5");
    
    break;
    
  default:
    state = 1;
    break;
 }
}
